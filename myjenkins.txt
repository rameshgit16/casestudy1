pipeline {
    agent any
environment {
SONAR_TOKEN = credentials('sonarqube-token')
IMAGE_NAME = 'ramesh316/sample'
        TAG = 'latest'
}
  stages{
        stage("Cleanup Workspace"){
                steps {
                cleanWs()
                }
            }
stage("checkout from SCM") {
      steps {
        git branch: 'main' , credentialsId: 'github' , url: 'https://github.com/rameshgit16/Petclinic.git'
        }
   }
stage ("Build application") {
        steps {
             sh "mvn clean package"
             }
        }
stage ("Test application") {
        steps {
           sh "mvn test"
              }
         }

      stage ('SonarQube Analysis') {
        steps {
      withSonarQubeEnv("sonarqube") {
         sh "mvn clean verify sonar:sonar -Dsonar.projectKey=sonar-petclinic -Dsonar.projectName='sonar-petclinic'"
     }
  }
}
stage('Build Docker Image') {
            steps {
                script {
                    docker.build("$IMAGE_NAME:$TAG")
                }
            }
        }

   
 stage('Push Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-cd') {
                        docker.image("$IMAGE_NAME:$TAG").push()
                    
                }            
            }
        }
    }  
  stage('Security Scan') {
            steps {
               script {
                sh "trivy image ${IMAGE_NAME}:${TAG}"
           }
        }
     }
  }
}
